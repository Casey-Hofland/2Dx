<docs>
    <ContourTracer>
        <pathCount>
            <summary>The number of paths of the contour.</summary>
        </pathCount>
        <GetPath>
            <summary>Gets a path from the ContourTracer by its index.</summary>
            <param name="index">The index of the path to retrieve.</param>
            <param name="path">An ordered list of the points in the selected path to store points in.</param>
        </GetPath>
        <Trace>
            <summary>Traces a contour and stores its paths.</summary>
            <param name="texture">Texture from which to trace the contour.</param>
            <param name="pivot">Contours pivot point relative to its texture.</param>
            <param name="pixelsPerUnit">The number of pixels in the texture that correspond to one unit in world space.</param>
            <param name="gapLength">How much difference in pixels in a straight line is considered a gap.</param>
            <param name="product">The vector product of 2 sequential points above which a new point is ignored.</param>
        </Trace>
    </ContourTracer>
    <BoxCollider2DxTools>
        <IsBox>
            <summary>Checks if a PolygonCollider2D is representing a BoxCollider at a certain rotation.</summary>
            <param name="polygonCollider2D">The PolygonCollider2D to check.</param>
            <param name="rotation">The rotation to check.</param>
        </IsBox>
        <CreateBox>
            <summary>Creates a box out of a PolygonCollider2D.</summary>
            <param name="polygonCollider2D">The PolygonCollider2D to create a box out of.</param>
            <param name="rotation">The rotation of the box.</param>
            <param name="size">The size of the box.</param>
        </CreateBox>
        <Box2D>
            <summary>Converts a BoxCollider2D to a PolygonCollider2D.</summary>
            <param name="boxCollider2D">The BoxCollider2D to convert to.</param>
            <param name="polygonCollider2D">The PolygonCollider2D to convert to.</param>
        </Box2D>
    </BoxCollider2DxTools>
    <ColliderConverter>
        <GetPairedCollider2D>
            <summary>Get the Collider2D that is paired to this Collider.</summary>
            <returns>The paired Collider2D or null if none.</returns>
        </GetPairedCollider2D>
        <GetPairedCollider>
            <summary>Get the Collider that is paired to this Collider2D.</summary>
            <returns>The paired Collider or null if none.</returns>
        </GetPairedCollider>
        <ColliderToCollider>
            <summary>Copies one Colliders properties to another.</summary>
            <param name="collider">The Collider to copy from.</param>
            <param name="other">The Collider to copy to.</param>
        </ColliderToCollider>
        <Collider2DToCollider2D>
            <summary>Copies one Collider2Ds properties to another.</summary>
            <param name="collider2D">The Collider2D to copy from.</param>
            <param name="other">The Collider2D to copy to.</param>
        </Collider2DToCollider2D>
        <AddCollider>
            <summary>Add a <typeparamref name="Collider"/> and create and pair it with a <typeparamref name="Collider2D"/>.</summary>
            <param name="copyOf">The <typeparamref name="Collider"/> to copy from.</param>
        </AddCollider>
        <AddCollider2D>
            <summary>Add a <typeparamref name="Collider2D"/> and create and pair it with a <typeparamref name="Collider"/>.</summary>
            <param name="copyOf">The <typeparamref name="Collider2D"/> to copy from.</param>
        </AddCollider2D>
        <DestroyPairedColliders>
            <summary>Destroy a Collider Collider2D pair.</summary>
            <param name="collider">The Collider of the pair to destroy.</param>
            <param name="collider2D">The Collider2D of the pair to destroy.</param>
            <param name="index">The index of the pair to destroy.</param>
        </DestroyPairedColliders>
        <UpdateColliders>
            <summary>Update the paired Colliders to remove any destroyed Colliders or recreate any destroyed Collider2Ds.</summary>
        </UpdateColliders>
        <CacheColliders>
            <summary>Iterate through all <typeparamref name="Collider"/> on the ColliderConverter and the Transform3D and add them if they weren't already added.</summary>
        </CacheColliders>
        <UpdateCollider2Ds>
            <summary>Update the paired Collider2Ds to remove any destroyed Collider2Ds or recreate any destroyed Colliders.</summary>
        </UpdateCollider2Ds>
        <CacheCollider2Ds>
            <summary>Iterate through all <typeparamref name="Collider2D"/> on the ColliderConverter and the Transform2D and add them if they weren't already added.</summary>
        </CacheCollider2Ds>
        <ColliderToCollider2D>
            <summary>Converts a Collider to a Collider2D.</summary>
            <param name="collider">The Collider to convert.</param>
            <param name="collider2D">The Collider2D to convert to.</param>
        </ColliderToCollider2D>
        <Collider2DToCollider>
            <summary>Converts a Collider2D to a Collider.</summary>
            <param name="collider2D">The Collider2D to convert.</param>
            <param name="collider">The Collider to convert to.</param>
        </Collider2DToCollider>
    </ColliderConverter>
    <BoxCollider2Dx>
        <AddBoxCollider2D>
            <summary>Add a <typeparamref name="C2D"/> from a BoxCollider2D and create and pair it with a <typeparamref name="C"/>.</summary>
            <param name="copyOf">The BoxCollider2D to copy from.</param>
        </AddBoxCollider2D>
        <CacheCollider2Ds>
            <summary>Iterate through all <typeparamref name="C2D"/> and BoxCollider2Ds on the ColliderConverter and the Transform2D and add them if they weren't already added.</summary>
        </CacheCollider2Ds>
    </BoxCollider2Dx>
    <Rigidbody2Dx>
        <AddRigidbody>
            <summary>Add a Rigidbody and cache it to the converter.</summary>
            <param name="copyOf">The Rigidbody to copy from.</param>
        </AddRigidbody>
        <AddRigidbody2D>
            <summary>Add a Rigidbody2D and cache it to the converter.</summary>
            <param name="copyOf">The Rigidbody2D to copy from.</param>
        </AddRigidbody2D>
        <IgnoreOverlap>
            <summary>Find all 2D colliders that are overlapping the rigidbody2D and ignore them.</summary>
        </IgnoreOverlap>
        <ClearOverlap>
            <summary>Clear the list of ignored colliders.</summary>
        </ClearOverlap>
        <UpdateOverlap>
            <summary>Update the ignored colliders by checking if they still overlap the rigidbody2D.</summary>
        </UpdateOverlap>
        <angularDrag>
            <summary>Angular drag of the currenty rigidbody.</summary>
        </angularDrag>
        <angularVelocity>
            <summary>Angular velocity of the currenty rigidbody.</summary>
        </angularVelocity>
        <centerOfMass>
            <summary>Center of mass of the currenty rigidbody.</summary>
        </centerOfMass>
        <constraints>
            <summary>Constraints of the currenty rigidbody.</summary>
        </constraints>
        <drag>
            <summary>Drag of the currenty rigidbody.</summary>
        </drag>
        <freezeRotation>
            <summary>If the currenty rigidbody should freeze its rotation.</summary>
        </freezeRotation>
        <interpolation>
            <summary>Interpolation of the currenty rigidbody.</summary>
        </interpolation>
        <isKinematic>
            <summary>If currenty rigidbody is kinematic.</summary>
        </isKinematic>
        <mass>
            <summary>Mass of the currenty rigidbody.</summary>
        </mass>
        <position>
            <summary>Position of the currenty rigidbody.</summary>
        </position>
        <rotation>
            <summary>Rotation of the currenty rigidbody.</summary>
        </rotation>
        <velocity>
            <summary>Velocity of the currenty rigidbody.</summary>
        </velocity>
        <worldCenterOfMass>
            <summary>WorldCenterOfMass of the currenty rigidbody.</summary>
        </worldCenterOfMass>
        <AddForce>
            <summary>Calls AddForce on the currenty rigidbody.</summary>
        </AddForce>
        <AddForceAtPosition>
            <summary>Calls AddForceAtPosition on the currenty rigidbody.</summary>
        </AddForceAtPosition>
        <AddRelativeForce>
            <summary>Calls AddRelativeForce on the currenty rigidbody.</summary>
        </AddRelativeForce>
        <AddTorque>
            <summary>Calls AddTorque on the currenty rigidbody.</summary>
        </AddTorque>
        <GetPointVelocity>
            <summary>Calls GetPointVelocity on the currenty rigidbody.</summary>
        </GetPointVelocity>
        <GetRelativePointVelocity>
            <summary>Calls GetRelativePointVelocity on the currenty rigidbody.</summary>
        </GetRelativePointVelocity>
        <IsSleeping>
            <summary>Calls IsSleeping on the currenty rigidbody.</summary>
        </IsSleeping>
        <MovePosition>
            <summary>Calls MovePosition on the currenty rigidbody.</summary>
        </MovePosition>
        <MoveRotation>
            <summary>Calls MoveRotation on the currenty rigidbody.</summary>
        </MoveRotation>
        <Sleep>
            <summary>Calls Sleep on the currenty rigidbody.</summary>
        </Sleep>
        <WakeUp>
            <summary>Calls WakeUp on the currenty rigidbody.</summary>
        </WakeUp>
    </Rigidbody2Dx>
    <RequireRigidbodyConverter>
        <AddComponent>
            <summary>Add a <typeparamref name="Component"/> and cache it to the converter.</summary>
            <param name="copyOf">The <typeparamref name="Component"/> to copy from.</param>
        </AddComponent>
        <AddComponent2D>
            <summary>Add a <typeparamref name="Component2D"/> and cache it to the converter.</summary>
            <param name="copyOf">The <typeparamref name="Component2D"/> to copy from.</param>
        </AddComponent2D>
        <ComponentToComponent>
            <summary>Copies one Components properties to another.</summary>
            <param name="component">The Component to copy from.</param>
            <param name="other">The Component to copy to.</param>
        </ComponentToComponent>
        <Component2DToComponent2D>
            <summary>Copies one Component2Ds properties to another.</summary>
            <param name="component2D">The Component2D to copy from.</param>
            <param name="other">The Component2D to copy to.</param>
        </Component2DToComponent2D>
        <ComponentToComponent2D>
            <summary>Converts a Component to a Component2D.</summary>
            <param name="component">The Component to convert.</param>
            <param name="component2D">The Component2D to convert to.</param>
        </ComponentToComponent2D>
        <Component2DToComponent>
            <summary>Converts a Component2D to a Component.</summary>
            <param name="component2D">The Component2D to convert.</param>
            <param name="component">The Component to convert to.</param>
        </Component2DToComponent>
    </RequireRigidbodyConverter>
</docs>
